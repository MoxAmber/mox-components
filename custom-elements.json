{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/components/Modal/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "An accessible modal dialog component with click-outside behaviour",
          "name": "Modal",
          "cssParts": [
            {
              "description": "The base dialog element",
              "name": "dialog"
            },
            {
              "description": "The close button",
              "name": "close"
            },
            {
              "description": "The inner container div",
              "name": "container"
            }
          ],
          "slots": [
            {
              "description": "A title to display in the Modal header",
              "name": "title"
            },
            {
              "description": "Modal body content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the modal is open and available for interaction"
            },
            {
              "kind": "field",
              "name": "returnValue",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "The return value of the modal, either from Modal.close(returnValue) or\nsubmitting <form method='dialog'>"
            },
            {
              "kind": "method",
              "name": "showModal",
              "description": "Show the modal. Everything outside the modal is inert"
            },
            {
              "kind": "method",
              "name": "close",
              "parameters": [
                {
                  "name": "returnValue",
                  "optional": true,
                  "type": {
                    "text": "string"
                  },
                  "description": "The return value to set"
                }
              ],
              "description": "Close the modal, optionally setting the returnValue"
            }
          ],
          "events": [
            {
              "name": "close",
              "type": {
                "text": "Event"
              },
              "description": "Fires when the modal is closed"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "mox-modal",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Modal",
          "declaration": {
            "name": "Modal",
            "module": "src/components/Modal/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "mox-modal",
          "declaration": {
            "name": "Modal",
            "module": "src/components/Modal/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/VisuallyHidden/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "VisuallyHidden",
          "slots": [
            {
              "description": "Any content intended to be hidden visually",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "focusable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "focusable"
            }
          ],
          "attributes": [
            {
              "name": "focusable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "focusable",
              "description": "Should contents be focusable?",
              "attribute": "focusable"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "mox-visually-hidden",
          "summary": "Visually hide content, while still rendering it in the accessibility tree",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VisuallyHidden",
          "declaration": {
            "name": "VisuallyHidden",
            "module": "src/components/VisuallyHidden/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "mox-visually-hidden",
          "declaration": {
            "name": "VisuallyHidden",
            "module": "src/components/VisuallyHidden/index.ts"
          }
        }
      ]
    }
  ]
}
